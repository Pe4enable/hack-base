id,hackathon,title,link,live demo,source code,video,winner,short,merged_column
1,ETHGlobal Tokyo,ChatGPT 4 Public Goods,https://ethglobal.com/showcase/chatgpt-4-public-goods-66si0,,https://github.com/QuietImCoding/ai-trade,,,ChatGPT 4 Public Goods is an AI-based trading program similar to the hamster / goldfish stock traders people have made. The idea is to convince chatGPT it is playing a video game and have its choices reflected in real cryptocurrency buying-selling decisions.,"ChatGPT 4 Public Goods is an AI-based trading program similar to the hamster / goldfish stock traders people have made. The idea is to convince chatGPT it is playing a video game and have its choices reflected in real cryptocurrency buying-selling decisions.The goal was to create a public spectacle of trading with 1% of the funds in the wallet every day going to public goods funding,taking advantage of the (potential) latent trading skill of ChatGPT to fund important infrastructure while simultaneously creating a public spectacle by posting to lens and soliciting trade advice / tips. Unfortunately my laptop internet seemed to stop working entirely so it is largely incomplete :/ This project is written entirely in Python using the Web3 library,with all the RPC requests going through Alchemy and Uniswap for the trades. ChatGPT 3.5 turbo is used for the ai parts,as I do not yet have access to gpt4. I had hoped to add a front end,but the wifi was not quite working so it's extremely incomplete."
2,ETHGlobal Tokyo,proof of primate,https://ethglobal.com/showcase/proof-of-primate-niac0,,https://github.com/34r7h/primatehood,,,https://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehood,https://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehood sdafasdhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehoodhttps://github.com/34r7h/primatehood
3,ETHGlobal Tokyo,Blockhead: ETHTokyo 2023,https://ethglobal.com/showcase/blockhead-ethtokyo-2023-kx4rh,https://blockhead.info,https://github.com/darrylyeo/blockhead,,üìú Scroll ‚Äî Just Deploy üõ† Quantstamp ‚Äî Best Use Case üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize,Track,"visualize & explore all of crypto,DeFi & web3 with Blockhead's crypto portfolio tracker,cross-EVM block explorer,and interfaces for your favorite dapps and web3 infrastructure.,Blockhead is a browser for all of crypto,DeFi and web3,built as an ongoing public good project with new features and integrations added at each hackathon. Track,visualize & explore all of crypto,DeFi & web3 with Blockhead's crypto portfolio tracker,cross-EVM block explorer,and interfaces for your favorite dapps and web3 infrastructure. New features for ETHTokyo 2023:‚Ä¢ Built a Lens interface with profile lookups and authentication,with support for all three deployed instances of the protocol (Polygon PoS,Polygon Mumbai,Sandbox Polygon Mumbai) https://blockhead.info/apps/lens‚Ä¢ Added first-class support for Lens handles across all address inputs in the interface. Type any Lens handle (e.g. stani.lens or test.test) to automatically resolve to the owner's address based on context.‚Ä¢ Added Airstack as a token balance provider and NFT provider in Portfolio/Explorer‚Ä¢ Added support for Push Protocol WebSocket subscriptions‚Ä¢ Added Polygon zkEVM,Scroll and Scroll Alpha Testnet to Portfolio/Explorer‚Ä¢ Added QuickNode endpoint for Polygon zkEVM"
4,ETHGlobal Tokyo,CryptoTipJar,https://ethglobal.com/showcase/cryptotipjar-pyxc9,,https://github.com/martaGonz/donatedapptokyo,,,CryptoTipJar is a dApp that enables content creators to receive micro-donations from supporters,"integrated into social media profiles or personal websites,using Metamask. It fosters community by showcasing recent messages from donors.,CryptoTipJar is a decentralized application (dApp) that enables content creators to receive micro-donations (0.01 ETH) from their supporters. It is designed to be integrated into social media profiles,personal websites,or other online platforms,such as TikTok bios. By connecting a Metamask wallet,users can easily send micro-donations and leave messages to support their favorite content creators. In exchange,creators can send NFTs or other gifts to their supporters. The dApp fosters a sense of community and recognition among donors through its ""recent messages"" list. The CryptoTipJar project was built using various technologies,including React,Next.js,Chakra UI,ethers.js,and MetaMask.React and Next.js were used for building the frontend of the application,while Chakra UI provided the design system and UI components. Ethers.js and Web3 were used for interacting with the Ethereum blockchain and Metamask wallet,and enabling the sending and receiving of ETH donations."
5,ETHGlobal Tokyo,Taikonomics,https://ethglobal.com/showcase/taikonomics-ww3px,https://docs.google.com/presentation/d/1reJMvuuKEbksNIo3srrJNZwK24-53VhWr6wzt82OHyI/edit?usp=sharing,https://docs.google.com/presentation/d/1reJMvuuKEbksNIo3srrJNZwK24-53VhWr6wzt82OHyI/edit#slide=id.g22e3dae3205_0_385,,ü§ì Taiko ‚Äî Protocol Economics,Taiko is a type 1 zkEVM L2 which uses ETH as a native token to pay for fees. This design makes value capture more difficult; Taikonomics is a token economic architecture which captures value to TKO in accordance with technical and design constraints.,"All of the info is in the presentation in the slides.UsersUsers pay in ETHCaptures value to ETHAligns with Ethereum ecosystem & promotes Ethereum network healthOptimize for cheap tx'ssee in other design componentsPay proposers in ETH,not TKO,to minimize user friction while accruing value to ETHProposersNo capital requirementsMinimizes proposers' barriers to entry--> Maximizes # of proposers --> decentralization----> We want deceentralization of proposers because this ultimately drives down users' costsStakers subsidize proposers' required fees to provers in exchange for a DAO-set variable % of tx fees. I followed the Eat Sleep Crypto / Token Dynamics Demand-Side Tokenomics frameworkhttps://www.youtube.com/watch?v=I_4QbbZJjsAInclude one bespoke tokenomic mechanism,designed to temporarily subsidize user fees with a mint-and-burn modelAlso included staking pools to map the value of ETH flowing through the system to the value of all circulating TKO."
6,ETHGlobal Tokyo,Widget Protocol,https://ethglobal.com/showcase/widget-protocol-e6iya,https://testflight.apple.com/join/kwObycZ4,https://github.com/caaaption/WidgetProtocol,,üñº QuickNode ‚Äî Best use of NFT/Token API üîü Push ‚Äî Top 10,The Widgets Protocol is the iPhone widget version of the Appstore. Anyone can develop dApps widgets and place them on the iPhone home screen.,"Widgets Protocol is a revolutionary app that allows Dapps to increase user retention without developing additional apps. With Widgets Protocol,Dapp developers can easily create customizable and interactive widgets that can be embedded within popular social media platforms and other online channels. By doing so,Dapp developers can reach a wider audience,increase user engagement,and ultimately drive more adoption for their decentralized applications. Widgets Protocol is easy to use,flexible,and provides an innovative solution for Dapp developers looking to scale their user base without additional development costs. Try Widgets Protocol today and take your Dapp to the next level! I used SwiftUI throughout the application to provide iOS widgets,and since I did not create any complex screens that required UIKit,I was able to create them using SwiftUI alone.The architecture is based on The Composable Architecture.The application is a hyper-module application,which allows for minimum builds per module and fast development.APIClient is built for each service,which is DI'd by swift-dependency.Since only one widget can be generated per application,we have hacked the system so that a large number of widgets can be created.The application passes the content to be displayed to the widget,and the widget performs UI switching on the widget side,enabling the creation of a large number of widgets.Some sponsors do not provide Public Rest API,so we set up our own Express server to reference data from there.https://github.com/caaaption/WidgetProtocolhttps://github.com/caaaption/WidgetProtocol-api"
7,ETHGlobal Tokyo,Takarakuji,https://ethglobal.com/showcase/takarakuji-d1xak,https://ffqns-paaaa-aaaad-qfhna-cai.ic.fleek.co/,https://github.com/DAppsNDLT/Takarakuji,,üìú Scroll ‚Äî Just Deploy üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize,DApp that Let's you play Takarakuji scratch-off online uses ZK rollups,"This DApp uses an L2 to resolve winning tickets and sends them to L1 for the winner to be notified and have crypt paid out to their wallet. Implements a social leaderboard of wallets that have won with lens. The Linea Metamask testnet is used for ZK rollups.Made with wagmi react,typescript,solidity. This DApp uses an L2 to resolve winning tickets and sends them to L1 for the winner to be notified and have crypt paid out to their wallet. Implements a social leaderboard of wallets that have won with lens. The Linea Metamask testnet is used for ZK rollups. Deployed to polygon as well."
8,ETHGlobal Tokyo,XA^2,https://ethglobal.com/showcase/xa-2-2zxdx,,https://github.com/sanchaymittal/ax-abstraction,,üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize,Chain & Account Abstraction solution to make any DApp x-chain enabled.,"The codebase showcases the Modular Contracts build to expand the utility of DApps across multiple chains.Modular contracts are a type of smart contract that can be easily combined and customized to create more complex contracts. By using modular contracts,developers can save time and reduce complexity when building decentralized applications (DApps) that require multiple contracts.Expanding the utility of DApps across multiple chains is an important goal for many blockchain projects. This is because different blockchain networks have different characteristics,such as scalability,security,and interoperability. By using modular contracts,your project can more easily adapt to these differences and provide a better user experience for your customers. Project Utilizes Connext,1Inch,Polygon,Polygon zkEVM,Gnosis,SAFE.Connext is a cross-chain bridge with trust-minimized solution,which allows for fast,cheap,and secure transfers to multiple domains. 1Inch is a decentralized exchange aggregator,which allows users to find the best prices for trading tokens across various DEXs. Polygon (previously known as Matic Network) is a Layer 2 scaling solution for Ethereum,which aims to improve the scalability and usability of the Ethereum network. Polygon zkEVM is a version of Polygon that uses zero-knowledge proofs to improve scalability even further. Gnosis is a decentralized prediction market platform,which allows users to create and participate in markets predicting the outcome of future events. SAFE is a decentralized autonomous organization (DAO) framework,which allows groups to make decisions and manage shared resources without the need for a centralized authority."
9,ETHGlobal Tokyo,1inch Fusion Dashboard,https://ethglobal.com/showcase/1inch-fusion-dashboard-96pev,,https://github.com/0xEljh/1inch-fusion-dashboard,,üóÉ 1inch ‚Äî ü•á Best Data Dashboard,On-chain analytics of Resolver activity on 1inch Fusion Swap,"This proof-of-concept level dashboard presents on-chain analytics of resolvers behaviour on 1inch's fusion swap,including:USD profit for each resolver transactionUSD ""true volume"" from each resolver (no double counts on intermediate swaps)gas fees paidinternal transactions made during a settlementIt is presented currently as a jupyter notebook,querying transactions of the settlemenrt contract (0xA88800CD213dA5Ae406ce248380802BD53b47647) via an etherscan and defillama api. This project is the final result of on-chain exploration of the Fusion Swap mechanism and resolvers. To avoid using overly dirty scrapping methods in this hackathon,we query the data via Etherscan's API. Etherscan had the data more intuitively structured for this analysis than Dune,hence this choice.Information on the ERC20 tokens and their prices was also needed,so the DeFillama historical price api was also used,especially since it supports queries via the ERC20 token address,while providing us with all the metadata like decimals,symbol,etc,hence avoiding direct eth_calls or contract calls in this poor WiFi hackathon environment."
10,ETHGlobal Tokyo,Bot or Not,https://ethglobal.com/showcase/bot-or-not-oox84,,https://github.com/kkpsiren/lens-bot-or-not,,üìú Scroll ‚Äî Just Deploy,Bots are taking over the world and are dangerooooous. It is up to us the users the start contributing to fight against them. Let's go. Be the superhero. Earn blockchain cred by executing your insights on-chain.,"Using data analysis we first train a machine learning model to uncover the some insight into the bot activity on Lens Protocol by generating a publicly available dataset of over 100k profiles. However as is always the case,nothing is perfect. Every model is biased and it is impossible to build mindblowing models in few hours. Furthermore labeling the data is the most time consuming and often iterative process. Here in this project we deploy the model for both users to explore the ecosystem but also help to better differentiate between the human and bot activities. We store the user contributions on-chain (Scroll Alpha testnet) and paying them the transaction. We think that this provides users incentives to  contribute to the ecosystem as it leaves permanent traces. Furthermore the user inspection is made easier by providing additional Token/NFT data from Ethereum Mainnet that was not used in the training of machine learning. This is done with the incredible support Airstack. This solo hacked project combined data analytics (scraping like hell for Lens Protocol + onchain data). ML/AI using Google tabnet semisupervised learning (oldie but goldie) for bot classification. Gaming UI to incentivize people to contribute to labeling data and potentially validating the results. New GraphQL checking with Airstack. Cool resource and especially GPT4 plugin to write faster queries. Although complex queries still need some work. Fast data offers lot of interesting possibilities! Here we use it as a tool to assist analytics. Deploying attestations of user contributions to Optimism AttestationStation contract that this project deployed to Scroll. Besides these.  By far the biggest resource that was hacked was Lens Protocol. Flipside Crypto was used for additional analytics. BigQuery,NextJS,Python,NodeJs,Foundry for contract deployment/verification,Jupyter Lab,ChatGPT for collaborative coding and of course Pocketwifi."
11,ETHGlobal Tokyo,grteacher,https://ethglobal.com/showcase/grteacher-v0a23,,https://github.com/GRTeacher/ethtokyo,,,A web-based quiz app that uses CELO blockchain and graphprotocol. The questions are preparation for the initial interviews for the Graph Advocates program.,"A web-based quiz platform that uses Celo blockchain technology for a transparent,tamper-proof,and decentralized experience. Users connect their Celo wallet to register,answer questions,and receive rewards in Celo tokens. The platform leverages smart contracts for quiz logic and ensures data integrity,making it ideal for educational or competitive purposes. The user-friendly interface and integration with popular wallet providers offer a seamless experience,while the underlying blockchain technology fosters trust and fairness for all participants. I used ChatGPT to write all the code,as I do not have any coding experience. It was very interesting to see how good it was!ChatGPT used: To build this web-based quiz platform,we utilized the following technologies:Celo Blockchain: The core of the project,Celo provides a decentralized,secure,and transparent system. We used Celo's smart contracts to handle quiz logic,user registration,and token rewards. This ensures data integrity and maintains trust among participants.Solidity: We wrote smart contracts in Solidity,the primary language for Ethereum and Celo blockchain development. These contracts handle quiz creation,question management,user participation,and rewards distribution.React: A popular JavaScript library,React enabled us to build a responsive and interactive user interface. We integrated it with Web3.js to communicate with the Celo blockchain.Web3.js: This library allowed us to interact with the Celo blockchain,enabling users to connect their wallets,participate in quizzes,and receive rewards.Node.js & Express: We used Node.js for server-side logic,and Express to create a lightweight,flexible API to serve quiz content,user data,and other necessary information.One notable hacky aspect of our project was the implementation of a custom gas optimization technique. We minimized the amount of data stored on-chain by keeping quiz content off-chain and only storing necessary transactional data. This significantly reduced gas fees and improved user experience without compromising data integrity or decentralization."
12,ETHGlobal Tokyo,Blood-D-Tokens,https://ethglobal.com/showcase/blood-d-tokens-fjbsw,https://drive.google.com/file/d/1yfgMSo6UMOzO_Mh8QLXxec79AWIzClxk/view?usp=sharing,https://github.com/0xHashiras/Blood-D-Tokens,,üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize,Here we are simulate a Decentralised Blood Bank system,"where users are rewarded as they donate Blood.,Blood-Donation-Tokens focuses on giving a social welfare,general awareness and a practical approach to blockchain. Here we are simulate a Decentralised Blood Bank system where :User enrolls and applies for donation by filling applicationThe application form is then validated by the 'approver' and then called upon to the blood donation centre.here,the given details are verified by the ""physical verifier"" and on physical examination,the donor is moved to blood collection.The collector,collects the blood,updates the progress in blockchain and moves to screening test.The screener,performs screening test and moves the blood to storage if blood is good to be taken.The entire process is updated on-chain step by step. with the user getting a fully On chain NFT . The user also gets blood tokens,which he later burn to withdraw blood from bank. The project uses Celo,Airstack,Push,Public welfare and encourages usage of Blockchain. The contract is made is an step by step nitty gritty process of the blood donation system with proper rewarding to the usersHere we are simulate a Decentralised Blood Bank system where :User enrolls and applies for donation by filling applicationThe application form is then validated by the 'approver' and then called upon to the blood donation centre.here,the given details are verified by the ""physical verifier"" and on physical examination,the donor is moved to blood collection.The collector,collects the blood,updates the progress in blockchain and moves to screening test.The screener,performs screening test and moves the blood to storage if blood is good to be taken.The entire process is updated on-chain step by step. with the user getting a fully On chain NFT . The user also gets blood tokens,which he later burn to withdraw blood from bank."
13,ETHGlobal Tokyo,Chaos Distribute,https://ethglobal.com/showcase/chaos-distribute-vdxzj,https://chaos-distribute.vercel.app/,https://github.com/iainnash/chaos-distribute,,üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize,Chaotically distribute NFTs,"Tokens across many chains in a dice/array format where users submit their desires into each slot and the server chooses a slot every 15ish minutes,Getting testnet and real tokens to use without any introduction to crypto is a race sometimes ‚Äì¬†for only small amounts of tokens. Why not make it a game? Users can fill slots on a board for 2 minutes and the computer within a semi-random 15 minute interval will select one of those entries on the board to get tokens. I plan to integrate social proof to avoid farming,but for the hackathon sake we make users login to verify their wallet to receive funds and prevent users signing too many times.While many projects attempt to verify security and trust in a multisig and wallet environment,this project turns this concept on its head: what if the wallet itself could do lots of random actions and users with no value in their wallets can submit proposed transactions such as getting some tokens or NFTs. Around every 5 minutes,the server will pick a random square on the proposal grid and execute it through the user's chosen chain and wallet either directly on the chain or via the chain's multisig.The backend here uses gnosis safe SDK and multisigs to collect tokens then a simple forwarder address to submit transactions to the safe. If something happens to the forwarder,assets are safe and can be recovered from another address associated with the safe to remove the forwarder's permission and fix the issues.Supported chains:Mumbai / PolygonGoerli / ETHGnosis ChainMantle This project uses a standard web front-end interface. Originally,I wanted the wallets not to be virtual multisigs but instead owned by users and able to do any action. After some thinking and barriers with Metamask SDKs I decided to go a more familiar route ‚Äì¬†scripting gnosis safe wallets that users can login to and chaotically propose transactions to.System architecture:[ Redis Server ]A redis server stores all previous transactions and upcoming proposed transactions,along with handling user timeouts.[ Front-end Client & API ]Interfaces with the user and the redis server. Can be found in client/[ Back-end Job Runner API ]This runs the 5 minute interval cron job. Can be found in server/[ NFT ]This is the NFT contract users can win. Can be found in nft/.Used APIs:Connect Wallet / WalletConnect v2EthersNext.jsSafe SDKNFT (ERC721)"
14,ETHGlobal Tokyo,DAOAD,https://ethglobal.com/showcase/daoad-ks9ww,,https://github.com/hoshinodis/egt-daoad,,,A fair and open advertising platform using DAO.A fair and open advertising platform using DAO.A fair and open advertising platform using DAO.A fair and open advertising platform using DAO.A fair and open advertising platform using DAO.,"An innovative ad serving platform.It improves on the disadvantages of Web2 ad serving.DAO's fair and impartial ad screening makes the world of Web3 more exciting.An innovative ad serving platform.It improves on the disadvantages of Web2 ad serving.DAO's fair and impartial ad screening makes the world of Web3 more exciting.An innovative ad serving platform.It improves on the disadvantages of Web2 ad serving.DAO's fair and impartial ad screening makes the world of Web3 more exciting. We built a smart contract and DAO for web3,built the ad serving system in web2,and tied the two together on the front end.We built a smart contract and DAO for web3,built the ad serving system in web2,and tied the two together on the front end.We built a smart contract and DAO for web3,built the ad serving system in web2,and tied the two together on the front end."
15,ETHGlobal Tokyo,Galaxy Throne Warfare + ZK NFT Bridge,https://ethglobal.com/showcase/galaxy-throne-warfare-zk-nft-bridge-x1cdt,,https://github.com/GalaxyThrone/tokyo_monorepo,,‚õì Polygon ‚Äî Best Cross-Chain Hack üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize,We've built a trustless #ERC721 open access #NFT bridge connecting L1 #Ethereum to L2 #Taiko & #Polygon zkEVM!üåâ Also,"introducing a fully on-chain turn-based strategy game on Taiko,Polygon zkEVM & GnosisüéÆ. Plus,an easier zkEVM merkle proof backend!üíª #blockchain #innovationüöÄ,Title: Cross-Chain NFT Bridge,On-Chain Strategy Game & Enhanced zkEVM BackendDescription:We proudly present our hackathon project,addressing NFT interoperability,scalability,and entertainment in the blockchain ecosystem. Our project has three key components:Trustless ERC721 Open Access NFT Bridge: A secure cross-chain bridge connecting L1 Ethereum,L2 Taiko & L2 Polygon zkEVM,enabling seamless transfer and management of diverse ERC721 NFTs without intermediaries.Fully On-Chain Turn-Based Strategy Game: Showcasing our bridge's potential,we've developed an engaging,scalable game deployed on Taiko,Polygon zkEVM & Gnosis. Players can use NFT assets across networks,illustrating blockchain-based gaming's future.Enhanced zkEVM Backend with Merkle Proof Support: We've built a backend service to simplify Merkle proof generation/validation for zkEVM,streamlining the platform and enabling easier work with zkEVM applications.Our project empowers users and developers by offering flexibility and new opportunities. The cross-chain NFT bridge opens possibilities for creative expression,while the on-chain strategy game demonstrates blockchain gaming potential. The enhanced zkEVM backend optimizes the ecosystem and simplifies zkEVM application usage.We believe our project will contribute to blockchain growth and evolution,and we're eager to share it with hackathon judges and participants. We look forward to your feedback and further developing our platform as a comprehensive solution for NFT interoperability,gaming,and zkEVM optimization. For this project,we carefully selected cutting-edge technologies and tools to ensure a robust,scalable,and efficient solution. Here's an overview of our tech stack and how we put it all together:NFT Bridge: We utilized Taiko zkEVM and Polygon zkEVM as the backbone for our trustless ERC721 Open Access NFT Bridge. These Layer 2 solutions enable fast and secure cross-chain NFT transfers between Ethereum,Taiko,and Polygon,providing the desired interoperability.Smart Contracts: We developed our smart contracts using Solidity,a popular and versatile language for Ethereum-based applications. We employed Hardhat,a powerful development environment,for compiling,deploying,and testing our contracts,ensuring their reliability and security.Frontend: To create a user-friendly and visually appealing interface,we chose React,Next.js,TypeScript,and Tailwind CSS. This combination of technologies allowed us to build a responsive,modular,and maintainable frontend that interacts seamlessly with our smart contracts and backend services.Backend: For our enhanced zkEVM backend with Merkle Proof Support,we developed a Rust-based service to efficiently handle Merkle proof generation and validation. Rust's performance and safety features made it an ideal choice for this critical component.Sponsor Technologies: We integrated the @statechannels browser-based wallet to streamline the connection to Coinbase and Bitfinex APIs,simplifying user onboarding and interaction. We also leveraged MobX to design a reactive frontend that automatically updates based on changes in the underlying data.GPT-4 Assistance: To facilitate our development process,we occasionally sought help from GPT-4,OpenAI's advanced language model. GPT-4 provided valuable insights,suggestions,and ideas to improve our project throughout the development journey.By combining these technologies,we built a comprehensive solution that addresses NFT interoperability,gaming,and zkEVM optimization. Our project showcases the potential of blockchain-based entertainment and cross-chain interactions,paving the way for future innovations in the space."
16,ETHGlobal Tokyo,DeFi Gaurdian,https://ethglobal.com/showcase/defi-gaurdian-5dvr8,,https://github.com/diyahir/ETH-TOKYO-2023-Rate-Limits,,üìú Scroll ‚Äî Just Deploy üîü Push ‚Äî Top 10 üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize üë∑ Taiko ‚Äî ü•à Best Dapp,Introducing a general purpose rate limit contract guardian to detect hacks and minimize losses at the smart contract level!,"This project gives DeFi protocols an opportunity to give depositors additional safety guarantees to prevent hacks and minimize losses. We achieve this by tracking the inflow and outflow of tokens and using existing rate limiting heuristics to determine if a transaction is a probable hack. This smart contract acts like a proxy between the defi protocol and the broader chain. Using this proxy,we can determine if a token outflow is a likely hack. For example in the euler hack,99% of the TVL disappeared in a few blocks,this is something we can surely detect using smart contracts. Additionally,we created a web app to monitor the inflow and outflows as well as some quick actions for the admin in the even of a hack.We leverage push notifications to quickly notify the relevant parties."
17,ETHGlobal Tokyo,Shin Protocol,https://ethglobal.com/showcase/shin-protocol-1umv9,https://shin-protocol.up.railway.app/,https://github.com/imsaptarshi/shin-protocol,,üèä The Graph ‚Äî Pool Prize üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize,Proving your human credibility on-chain without losing anonymity,"Shin Protocol provides a two-way proof to verify humanity/credibility of a user on chain without losing anonymity and staying decentralized. Shin is a platform where you can prove your authenticity by completing tracks & quests which are mostly decentralized. By doing this - you would increase your trust score which,other dApps would use to prove your humanity. This project uses next.js & chakra on the frontend. We have used solidity for our smart contracts and ethers.js to connect them on the frontend.Project documentation is made on nextra by next.js.The project resides on the Polygon chain.We have used QuickNode for fetching user's on-chain analytics and integrate them into Shin's trust score.Bunzz,which we recently discovered helped us deploy our NFT contracts easily,which saved us a lot of time.ENS & LENS handle claims and verification were handled by their subgraphs on TheGraph.Lastly,Shin's on-chain notifications were made easy using Push Protocol."
18,ETHGlobal Tokyo,Interest Carry-Trade Arbitrageur,https://ethglobal.com/showcase/interest-carry-trade-arbitrageur-4scrx,https://vimeo.com/818009442,https://github.com/Secured-Finance-ETH/Bot-Trading,,üí∏ Secured Finance ‚Äî Top DeFi Award üåê Hyperlane ‚Äî Best Interchain Security Modules,Automated token carry swap bot ü§ñ exploits interest rate üí∞ differentials 24/7,"Automated token carry swap bot looks for interest rate differentials between lending / borrowing order pairs on Secured FinanceIt creates a strategy to maximise interest rate differentials,then executes it by borrowing token X,swapping it and lending token Y for a higher yield (APR) Technology:ethers.js to connect with the blockchainTypescriptNodeJSSmart contract ABIs from Secured FinanceBinance API for price fetchingArchitecture:Bot script that can be run in a cron job,listen mempool to run front-run attacksBackend botOur backend stack depends on the sponsor's technology"
19,ETHGlobal Tokyo,Lens Network Graph,https://ethglobal.com/showcase/lens-network-graph-6jxwr,,https://github.com/gfkacid/lens-network-graph,,,Visualize the network of any lens profile in an interactive graph format.,"Lens Network Graph is a standalone app that aims to provide an easy to navigate visual representation of the social network of any lens profile in an interactive graph format.Target any Lens profile (no need to sign in,you can peep other people's network as well!) and render their connections in a graph,clustered by connection type:followersfollowingmutual followersUser can search for specific profile name in the graph,or filter by connection type We are using LensSDK to feftching the Followers & Following profiles for the selected Lens Profile.To render the graph,our library of choice is Sigma.js,a powerful dataviz library on top of graphology. We are using the circlepack layaout package of graphology to cluster nodes together based on connection type (relative to target Lens profile)"
20,ETHGlobal Tokyo,ZK Governance,https://ethglobal.com/showcase/zk-governance-18b0x,https://github.com/Ethglobal-ZK-Wallet,https://github.com/Ethglobal-ZK-Wallet/frontend,,üèä Worldcoin ‚Äî Pool Prize,Zero Knowledge verification for governance participants that allows voting with anonymity.,"Our project provides a platform to tackle the problem of anonymity for governance by leveraging on zero knowledge proofs and ""humaness-verification"" (via Worldcoin ID) to mask the transaction identities of participants in a governance vote.We first use authentication sdks such as World Coin to onboard users and bring the amount of bad actors to a minimum.We customize various voting contracts that incorporate Semaphore's on-chain identity hashing and verification to provide non-disclosure of user origin while still being able to proof participation. This project uses WorldCoin ID and authentication/sdk to prove humaness of users while weeding out bots and bad actors.Thereafter we provide a custom voting contract that wraps around Semaphore's voting extension,to provide anonymity of users while still proving participation and tabulation of vote data."
21,ETHGlobal Tokyo,Commit-Reveal Schema Exploration,https://ethglobal.com/showcase/commit-reveal-schema-exploration-nj9v7,,https://drive.google.com/file/d/1U2aUmS1RdpSFEv-8R4uSdA5pK62QuzVC/view?usp=sharing,,,This is an educational projects to learn more about the sharing secrets on a blockchain.,"How to simultaneously broadcast secrets on a public blockchain?The difficulty on the blockchain is that participants can't share theirvalues at the same time,the first participantmust broadcat their value,meaning other participantscan act accordingly.SOLUTION__Commitment SchemeCryptographic algorithm that allows someone to commit to a valuewhile keep it hidden from others with the abilityto reveal it later.Phase 1: commitPhase 2: revealThe following contract implements commit-and-reveal for a game of rock-paper-scissors. This commit-and-reveal exploratory project uses solidity to implement rock-paper-scissors game logic. A simple React interface was built to manage connecting and deploying to the replit testnet,as well as providing an interface to invoke the rock-paper-scissors slidity contract."
22,ETHGlobal Tokyo,Axel,https://ethglobal.com/showcase/axel-0j1yc,https://axel-ethtokyo.netlify.app/,https://github.com/KanishkKhurana/EthTokyo-Submission-2023,,üìú Scroll ‚Äî Just Deploy üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize,Marketplace where developers can upload their saas products and get paid for usage all on chain! using zk we have abstracted the tedious process of client approvals and are ensuring quick and easy service utilisation,"Axel is a marketplace where developers can list their SaaS products that can be used by the community. this ensures that no one pays extra for the service and the developer gets a fair share. the entire project is on chain and all payments are controlled by smart contractsthis project uses sismo to ensure zk sign on the also takes care of the reputation of a person in a community. this ensures no bad actors.SISMO APP ID - 0xc7b905501592af8bdd512a91bf0a6ca1then this dapp allows you to list your saas that others can use and all this information is on chain using polygon mumbai testnet. and the payments are streamed for as long as a user actually uses that service using superfluid.finally all deployments have been done using bunnz and we have a quick action suite set up on scroll we use the following features-Sismo - Sismo Connect - we use sismo connect for ZK Sign up and connecting approved users to the dappscroll - we have deployed the smart contract on scroll to ensure smooth onboarding and end to end zk functionality in a fast fashionpolygon - we have deployed the smart contract on polygon for all major functionalities and adding the products and SaaS tools that devs makebunzz was used for deploymentSuperfluid was used to ensure that as a user uses a dapp,they only pay for the amount of time they spend using it ."
23,ETHGlobal Tokyo,Developer Community as a Service,https://ethglobal.com/showcase/developer-community-as-a-service-96cyc,,https://github.com/razacodespython/DCAAS,,üìú Scroll ‚Äî Just Deploy üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize,A tool built for making delightful developer experiences,"powered by Lens and Chat GPT.,As professionals in the Developer Relations field within web3 we have seen first hand how much work It can be to support developers,builders,and teams in general that are working towards integrating our companies tools or services. Developer Community as a Service exists to make it easier to multiply the output of Developer relations teams. Our lens-powered,stack overflow meets message board,allows for developers to build and share their code in a social setting and receive help from the Protocols and developer communities they are building with.We aim to help foster the growth of developer communities in two ways:Create a platform where insights and code snippets shared in the walled gardens of Discord and telegram can be saved for future reference and discoverability.A Telegram bot that is trained on protocol documentation and on community-supplied questions to help point builders in the right direction as they navigate new technologies.Our smart contracts track comments,messages,and associated authors based on a lens profile. We took this approach to make our platform cross-chain from the start and have deployed on Polygon,Linea,and Scroll.Moving forward,we plan to implement lens posts on the Polygon communities and explore ways this can be extended further. This project uses the Lens Protocol API to authenticate and to create developer user accounts. Our smart contracts were built with hardhat and deployed on Polygon,Linea,and Scroll.Additionally,we leveraged the Telegram Bot API as well as Open AI's Chat GPT Fine Tuning API to create a proof of concept bot that can be trained on developers questions and the best answers supplied to those questions. Over time the bot will be better trained and equipped to handle many inquiries."
24,ETHGlobal Tokyo,Squirrlideology,https://ethglobal.com/showcase/squirrlideology-o6hfg,,https://github.com/WillyDallas/Squirrlideology,,,This is an AI scenario generator that can create scenarios based on conflict of NPCs of different ideologies in a fictional or reality-based setting.,"This project is a piece of a larger game that I'm developing that attempts to map user's political ideologies based on their answers to silly questions revolving around squirrel land rights,squirrel healthcare,and similar,completely squirrel related,political questions.There is a general anger and malaise rising in the global population. People are fed-up with legacy systems of governance that have ballooned in size and budget to support violent bureaucracies while ignoring pressing problems and crises.  Resources are unfairly distributed,people are sick and hungry,prices are rising,and every day there is a new story detailing some failure of government or outrageous incompetency. It seems that waging war,or threatening to do so,is one of the few things that governments are still able to do.While we continue to innovate in all sectors of the economy while innovation in systems of governance have stalled. We leave governance to more learned,legal minds,and decry the ways government has failed us,without proposing or pursuing change on a more systemic level.Squirrly is an attempt to engage people in a process of governance experimentation by understanding better what it is they think government should actually do,and allowing them to build one from scratch.Users will engage in a generative storytelling game,where decisions are voted on,ideological impact of decisions are logged,and a squirrel government is formed to protect the squirrel nation from global catastrophe,internal strife,and attack by birds to hopefully arrive at ideas for better systems of governance,and more broadly,spark conversation about governance innovation. A conversation we desperately need to have if we are to survive all the natural and unnatural horrors that will confront us as we move forward in time. I was working on the scenario generation engine for this hackathon. With the help of my brother,we built a querying and classification engine using the OpenAI API and langchain to string together prompts and produce a data object that can be written to chain and pushed to users on a daily basis."
25,ETHGlobal Tokyo,Murasaki,https://ethglobal.com/showcase/murasaki-2gpnq,,https://github.com/adachi-440/Murasaki,,,Bridge between Polygon zkEVM and Layer1 using Hyperlane. In addition,"Wrap route can be used to easily issue tokens that can be used in various chains,Easy communication between zkEVM and Layer 1 using permissionless deployment of HyperlaneThe use of Hyperlane will also greatly facilitate integration with other L1 chains in the future.In addition,Wrap route can be used to easily issue tokens that can be used in various chains Build new endpoints,validators,and relayers for Bridge using Hyperlane's permissionless depolyment to allow connection to other chains.The use of Hyperlane will also greatly facilitate integration with other L1 chains in the future.In addition,Wrap route can be used to easily issue tokens that can be used in various chainsCommunication between Polygon zkEVM testnet and goerli and sepolia"
26,ETHGlobal Tokyo,SuperBuidl Platform,https://ethglobal.com/showcase/superbuidl-platform-4am37,,https://github.com/junta/super-buidl-platform,,üèä Worldcoin ‚Äî Pool Prize üîü Push ‚Äî Top 10 üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize üí∏ Superfluid ‚Äî Best Financial Project üèä UMA & Across ‚Äî Pool Prize,Community-oriented payment management platform for DAO workers with continuous payment through Superfluid governed by UMA Oracle,"Our core idea is to decentralize/democratize control of Superfluid money stream(CFA) by UMA‚Äôs optimistic oracle. Traditionally,Superfluid money stream is controlled by ACL(Access Control List),which we have to trust those listed entities(wallet addresses).In our platform:In given DAOs(e.g. BuidlGuidl),contributors are working with hourly-based fee. (e.g. $20/hour,over next 3 months)Contributors have to submit his progress within a certain interval(e.g. daily,weekly) publicly open.Contributors get paid with Superfluid money stream from DAO Treasury.Other community members continuously check his work provided step2.To create/update/delete the money stream,the corresponding statement of UMA oracle must be settled and ‚Äútrue‚Äù. For example,to delete the money stream,someone in the community claims that ‚ÄúA has stopped working(no recent progress submission) anymore‚Äù and is settled as a true statement through UMA. This project uses @superfluid for streaming payments to builders based realtime,we are using @uma oracle to decentralize/democratize control of Superfluid money stream by UMA‚Äôs optimistic oracle. Money flow control of Superfluid and UMA‚Äôs attestation is integrated on smart contract level.We have used @worldcoin id for human verification before setting up stream for the builder. The platform uses @push chat for better community engagement,and it's also deployed to @polygonMumbai."
27,ETHGlobal Tokyo,ZK Vendor Credentialing,https://ethglobal.com/showcase/zk-vendor-credentialing-jdvv4,https://github.com/csalvador58/zk-vendor-credentialing,https://github.com/csalvador58/zk-vendor-credentialing,,üèä Mina ‚Äî Pool Prize,A Zero Knowledge app for Vendor Credentialing in Healthcare powered by MINA Protocol and zk-SNARKs.,"This project is the first step in a real practical use of zero knowledge in healthcare.  I've worked in Healthcare for several years as a service engineer.  All service workers know the pain point in the redundant vendor credentialing process every and throughout the year.  Multiple instances of personal and medical records are created and uploading to various systems in order to receive the credentials to access the hospitals.  This project looks to reduce and/or eliminate the point of creating and uploading multiple instances of private records.  Leveraging ZK technology,only specific information and be shared to the verify instead of a full copy of the record.MINA's protocol makes this project possible to create a project that is able to document any relevant information into a off-chain Merkle Tree process while generating a final proof or the root to be stored on-chain.  The project provides a demo of verifying different pieces of information on a simulated medical record.  The project makes use of the assert methods to verify a proof and also allows for updating records off-chain while only storing minimal data of the root on-chain. This project utilizes MINA protocol starting with it's MINA zkApp CLI.  I started learning how to build with MINA and utilized a boilerplate Merkle Tree sample from the documentation.  MINA uses SnarkyJS which allows to program with Typescript.  A lot of time was spent going through the tutorials of the documentation and there are many improvements that could go along in the future especially utilizing recursion into the program."
28,ETHGlobal Tokyo,Confide.id,https://ethglobal.com/showcase/confide-id-zj7b8,https://confide.id,https://github.com/eli-d/ETHTOKYO2023,,üå± NETH ‚Äî Ecosystem Impact,Decentralising community trust. Aiming to solve the problem of digital trust and identification by relying on the most reliable metric: human relationships. Users can validate people they know,"creating a web of trust that can be queried to form new networks and test legitimacy.,This project aims to create a web of trust on chain,where instead of validators or other parties creating universal verification (e.g. verifying to anyone that a given user has a given credential),the trust is personal between people and based on human relationships. A given user is able to say that they trust another in different ways. They can trust the authenticity of another user,that is to declare they are a real person (Proof of Personhood). This may be because they have met them in real life at an event such as a hackathon. They can also trust whether the user is truthful and reliable in their judgement. This may be because they are colleagues or friends and know them to be trustworthy. Trusting a user doesn't create any sort of ""reputation"" or ""vouch"",only posting on chain the fact that I,User A,trust User B to some extent. Once a user has a direct network,they can expand their network of trusted users by looking at the connections of their own connections. For example,if User A trusts User B to be real and trustworthy,and User B does the same for User C,User A can trust that User C is almost definitely real,and can make a judgement about whether they fully or partially trust them (or maybe not at all). The project also facilitates making judgements from combining partial trust - if 3 parties User A believes are real but potentially aren't trustworthy agree that User B is real and completely trustworthy,User A can be sure that User B is almost definitely real,and can again make a judgement about how trustworthy they are. The onchain implementation stores trusted parties for each user in a contract,allowing them to look up and update their trusts.  A webapp allows users to determine whether other users are within a certain degree of trust of their network. For the scope of this hackathon all networks are public,although it could be possible to implement a ZK approach in the future. The frontend uses React/Typescript on Next.js with a bespoke UI component and interaction system. The interface is designed for mobile first. The trust system is stored on chain in a Solidity contract and uses an offchain computation to find paths between users,which are validated on chain before being accepted."
29,ETHGlobal Tokyo,H3aven - Gata (Governance for Data),https://ethglobal.com/showcase/h3aven-gata-governance-for-data-x94o4,https://melodic-kitsune-ec6b61.netlify.app/,https://github.com/H3aven-Labs/h3-gata,,üìú Scroll ‚Äî Just Deploy üèä‚Äç‚ôÇÔ∏è Polygon ‚Äî Pool Prize ü™Ñ FVM ‚Äî DataDAOs ü™Ñ Airstack ‚Äî ü•à Best Idea Implementation,Tokenized Access Control Application for Granular Data Governance,"Context:H3aven.com,the leading B2B-Baas of LATAM serves companies by certificating contract and process workflows via corporate blockchain consensus. In ETH Tokyo our goal is to decentralize data storage,so we present GATA: A Data Governance Framework based on Tokenized Organizational Roles.User stories:-> Only a NFT holder is capable of accessing encrypted data.-> All profiles with the same role can access the same data.-> Whenever an user is removed of its role,access to specific data is also atomically removed.Unprecedented Value to Society:Solution to credential double-spending:  It is much more dangerous to share a private-key than to share recoverable credentials (Netflix password).Solution to the corporate data kidnapping problem (Ransomware) by distributing data silos by company roles with complete data redundancy. H3AVEN - GATA uses SAFE'S account abstraction to streamline WEB2 access to WEB3 as well an integration with Gellato a paymaster to outsource fees away from users.For the decentralized storage it uses Filecoin integrated via Lighthouse. All data is encrypted and only accessed if the user is a holder of a given NFT.The best hacker merit we had was to make a mass adoption plataform with easy access and granular data control compatible with the most common token standard in web3."
30,ETHGlobal Tokyo,verPor,https://ethglobal.com/showcase/verpor-pd787,,https://github.com/Kanoopz/verPro,,,A way to verify onChain the experience  and work that developers have.,"A way to keep record of protocols,projects or companies where a developer has worked with or for. The idea is to issue a SBT from a smartContract to verify a certian protocol and/or project members so other people and/or user can have a proof that someone actually worked with or for an entity. Using lens as the userPlatform,two modules needed to be created,one for accepting a new user and other one to issue the actual SBT. A global interface contract was needed to be able to keep track of all the protcols/projects/companies instead of hardcoding (the info) on the modules."
